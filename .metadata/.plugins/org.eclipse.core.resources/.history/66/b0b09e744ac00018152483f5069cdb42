/*********************************************************************************
 * Licensed Materials - Property of IBM
 * 5655-TAC
 * (C) Copyright IBM Corp. 2013 All Rights Reserved. 
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with 
 * IBM Corp.               
 *********************************************************************************/


package com.ibm.ims.ea.om.rtc.update;

import com.ibm.ims.ea.base.om.common.messages.IQEO;
import com.ibm.ims.ea.om.common.Type2CommandBuilder;
import com.ibm.ims.ea.om.rtc.update.syntax.RTC_START._RTC_START;
import com.ibm.ims.ea.om.rtc.update.syntax.RTC_STOP._RTC_STOP;

/**
 * <pre>
 * Description here
 * 
 * Example Usage:
 * public static void main(String args[]) {
		 RoutingCodeCommandBuilder rtc = new RoutingCodeCommandBuilder();
		 rtc.commandStartRTC(new String[]{"TEST"}, _RTC_START.Q);
		 rtc.setRoute(new String[] {"TEST123"});
		 System.out.println(rtc.getCommand());
	}

 * </pre>
 * @author th365thli
 *
 */
public class RtcUpdateCommandBuilder extends Type2CommandBuilder implements RtcUpdateCommand{

	private static String commandPrefix = "UPDATE RTC";
	
	
	@Override
	public void setName(String[] values) throws IllegalArgumentException{
		StringBuffer temp = new StringBuffer("NAME(");
		
		for(String name : values) {
			int name_length = name.trim().length();
			
			if(name_length == 0 && name_length > 8) {
			throw new IllegalArgumentException(IQEO.IQEO0009E.msg(new Object[] { "(NAME = " + name + " , length = " + name_length + ")" }));	
			}
			temp.append(name);
			temp.append(COMMA);
		}
		temp.append(CLOSEPARANTH);
		commandArgs.add(temp.toString());
	}

	/**
	 * Set route
	 * NOTE: Route must be set last, after other keywords have been set
	 */
	@Override
	public void setRoute(String[] imsName) {
		int length = imsName.length;
		int count = 1;
		StringBuffer temp = new StringBuffer(") ROUTE(");
	
        for (String name: imsName) {
          temp.append(name);
          
          if(length > 1 && count !=length ){           
            temp.append(COMMA);   
          }
          count++;
        }
        commandArgs.add(temp.toString());
	}
	
	/**
	 * Set START value
	 */
	@Override
	public void setStart(_RTC_START value) {
		if(value != null) {
			StringBuffer temp = new StringBuffer("START(");
			temp.append(value);
			temp.append(CLOSEPARANTH );
			commandArgs.add(temp.toString());
		}
	}
	
	/**
	 * Set STOP value
	 */
	@Override
	public void setStop(_RTC_STOP value) {
		if(value != null) {
			StringBuffer temp = new StringBuffer("STOP(");
			temp.append(value);
			temp.append(CLOSEPARANTH);
			commandArgs.add(temp.toString());
		}
	}
	
	/**
	 * Creates a command with specified name and START value
	 * @param rtc		String name
	 * @param value		START value
	 * @return			String Command
	 */
	public String commandStartRTC(String[] rtc, _RTC_START value) {
		setName(rtc);
		setStart(value);
		return getCommand();
	}
	
	/**
	 * Creates a command with specified name and STOP value
	 * @param rtc		String name
	 * @param value		STOP value
	 * @return			String Command
	 */
	public String commandStopRTC(String[] rtc, _RTC_STOP value) {
		setName(rtc);
		setStop(value);
		return getCommand();
	}
	
	/**
	 * Returns the command prefix for this TYPE2 command
	 * The command prefix for this command is: "UPDATE TRAN";
	 */
	@Override
	public String getCommandPrefix() {
		return commandPrefix;
	}
	
	/**
	 * Unavailable for this TYPE2 command
	 */
	@Override @Deprecated
	public String getCommandSubType() {
		return null;
	}
	
	
}
