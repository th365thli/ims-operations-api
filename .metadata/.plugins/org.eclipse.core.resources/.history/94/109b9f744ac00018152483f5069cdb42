///*********************************************************************************
// * Licensed Materials - Property of IBM
// * 5655-TAC
// * (C) Copyright IBM Corp. 2013 All Rights Reserved. 
// * US Government Users Restricted Rights - Use, duplication or
// * disclosure restricted by GSA ADP Schedule Contract with 
// * IBM Corp.               
// *********************************************************************************/
//
//
//package com.ibm.ims.ea.om.rm.list;
//
//import java.util.ArrayList;
//import java.util.Collection;
//import java.util.Enumeration;
//import java.util.Properties;
//
//import com.ibm.ims.ea.om.common.exception.OmException;
//import com.ibm.ims.ea.om.common.result.OmResultSet;
//import com.ibm.ims.ea.om.rm.list.Recon.ReconId;
//
//public class ReconResponse {
//
//	private OmResultSet resultSet = null;
//	private ArrayList<Recon> reconList = null;
//	
//	public ReconResponse(OmResultSet resultSet) {
//		this.resultSet = resultSet;
//		populateList();
//	}
//	
//	private void populateList(){
//		reconList = new ArrayList<Recon>();
//		Properties[] responseProperties= this.resultSet.getResponseProperties();
//		int responsePropertiesLength = responseProperties.length;
//		Recon recon 	= null;
//		String value 	= "";
//		String key 		= "";
//		
//		 for(int i = 0; i < responsePropertiesLength; i++){
//	        	Enumeration<Object> em = responseProperties[i].keys();
//	        	recon = new Recon();
//	            while (em.hasMoreElements()){
//	            	key 	= (String)em.nextElement();
//	            	value 	=  (String)responseProperties[i].get(key);
//	            	
//	            	//Split the value so we can better manage the result
//	            	String[] result = splitString(value, ",");
//	            	
//	            	//Check the value/result to find indexes that have keywords RECON in them
//	            	String[] resultRecon1 = hasString(result, "RECON1"); //[RECON1,COPY1,IMSTESTS.DSHR.RECON1]
//	            	String[] resultRecon2 = hasString(result, "RECON2"); //[RECON2,COPY2,IMSTESTS.DSHR.RECON2]
//	            	String[] resultRecon3 = hasString(result, "RECON3"); //[RECON3,SPARE,IMSTESTS.DSHR.RECON3]
//	            	
//	            	//Set the Recon object with the appropriate values
//	            	if(resultRecon1.length == 3){
//    	            	recon.setInstanceField(ReconId.RECON_1_NAME,resultRecon1[0]);
//    	            	recon.setInstanceField(ReconId.RECON_1_STATUS,resultRecon1[1]);
//    	            	recon.setInstanceField(ReconId.RECON_1_DSN,resultRecon1[2]);
//	            	}
//	            	
//	            	if(resultRecon2.length == 3){
//    	            	recon.setInstanceField(ReconId.RECON_2_NAME,resultRecon2[0]);
//    	            	recon.setInstanceField(ReconId.RECON_2_STATUS,resultRecon2[1]);
//    	            	recon.setInstanceField(ReconId.RECON_2_DSN,resultRecon2[2]);
//	            	}
//	            	
//	            	if(resultRecon3.length == 3){
//    	            	recon.setInstanceField(ReconId.RECON_3_NAME,resultRecon3[0]);
//    	            	recon.setInstanceField(ReconId.RECON_3_STATUS,resultRecon3[1]);
//    	            	recon.setInstanceField(ReconId.RECON_3_DSN,resultRecon3[2]);
//	            	}
//    	           
//    	            //Check/find the RECON Version
//	            	String[] reconVersion = hasString(result, "IMS V"); //[IMS,V12R1]
//	            	if(reconVersion.length == 2){
//    	            	recon.setInstanceField(ReconId.RECON_LEVEL,reconVersion[1]);
//	            	}
//	            	
//    	            //Check find the RECON Minimum Version
//    	            String[] minVersion = hasString(result, "MINIMUM VERSION"); //[MINIMUM,VERSION,=,10.1]
//    	           // if(minVersion.length == 4){
//    	            if(minVersion != null){
//    	            	recon.setInstanceField(ReconId.RECON_MIN_VERSION,minVersion[3]);
//	            	}
//	            	
//	            	//Set the IMS for this RECON object
//	            	recon.setInstanceField(ReconId.RECON_IMS_NAME,key);
//	            }
//	          
//	            //Add it to the collection
//            	reconList.add(recon);
//		 }
//	}
//	
//	public Collection <Recon> getAllReconMembers() throws OmException {
//		return reconList;
//	}
//	
//	/**
//	 * Method splits a string (str) based for the eliminator (delims) passed. 
//	 * @param str
//	 * @param delims
//	 * @return
//	 */
//	private String[] splitString(String str, String delims){
//		return str.split(delims);
//	}
//	
//	/**
//	 * Method traverses an String[] searching each index to see if it contains keyword (match)
//	 * @param str
//	 * @param prefix
//	 * @return
//	 */
//	private String[] hasString(String[] str, String match){
//		for (String result : str) {
//		      if(result.contains(match)){
//		    	  return result.trim().split("\\s+"); //Should get: [RECON1,COPY1,IMSTESTS.DSHR.RECON1]
//		      }
//		}
//		return null;
//	}
//}
