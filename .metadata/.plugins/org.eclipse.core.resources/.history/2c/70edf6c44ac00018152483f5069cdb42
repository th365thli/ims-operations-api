/*********************************************************************************
 * Licensed Materials - Property of IBM
 * 5655-TAC
 * (C) Copyright IBM Corp. 2013 All Rights Reserved. 
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with 
 * IBM Corp.               
 *********************************************************************************/

package com.ibm.ims.ea.om.common.service;

import java.util.Collection;

import com.ibm.ims.ea.om.common.exception.OmConnectionException;
import com.ibm.ims.ea.om.common.exception.OmDatastoreException;
import com.ibm.ims.ea.om.common.exception.OmException;
import com.ibm.ims.ea.om.common.services.IconExtendedServices;
import com.ibm.ims.ea.om.icon.Iconnect;


public interface IconService {

    /**
     * Additional ICON related services that will simplfy the manipulation repeated service interactions
     * for specific results. Note: These extended services typically are aimed at suiting the web console's 
     * requirements. 
     * @return
     */
    public IconExtendedServices getExtendedIconServices();
    
	/**
	 * Use the QUERY IMSCON TYPE(IMSPLEX) command to display the status and activity of the IMSplex.
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException 
	 * @throws OmDatastoreException 
	 */
    public Collection<Iconnect> getImsplex() throws OmException, OmConnectionException, OmDatastoreException;
    
    public Collection<Iconnect> getImsplex(String[] route) throws OmException, OmConnectionException, OmDatastoreException;
    
    public Collection<Iconnect> startImsplexsCommunication(String[] imsplexName) throws OmException, OmConnectionException, OmDatastoreException;
    
    public Collection<Iconnect> stopImsplexsCommunication(String[] imsplexName) throws OmException, OmConnectionException, OmDatastoreException;
    
    /**
     * Command to display the status and activity of IMS Connect. This service
     * replicates the OM Type 2 command " QUERY IMSCON TYPE(CONFIG)"
     * @return
     * @throws OmException
     * @throws OmConnectionException 
     * @throws OmDatastoreException 
     */
    public Collection<Iconnect> getConfig() throws OmException, OmConnectionException, OmDatastoreException;
    
	/**
     * Use the QUERY IMSCON TYPE(PORT) command to display the status and activity 
     * of one or more ports defined to IMS Connect. The clients that are active on the
     * specified ports can also be displayed.
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException 
	 * @throws OmDatastoreException 
	 */
	public Collection<Iconnect> getPort() throws OmException, OmConnectionException, OmDatastoreException;
	
	/**
	 * Use the QUERY IMSCON TYPE(PORT) command to display the status and activity 
	 * of one or more ports defined to IMS Connect. The clients that are active on the
	 * specified ports can also be displayed.
	 * @param port
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException 
	 * @throws OmDatastoreException 
	 */
	public Collection<Iconnect> getPort(String port) throws OmException, OmConnectionException, OmDatastoreException;
	
	public Collection<Iconnect> getPort(String[] route) throws OmException, OmConnectionException, OmDatastoreException;
	
	public Collection<Iconnect> getPortSummary(String[] route) throws OmException, OmConnectionException, OmDatastoreException;
	
	public Collection<Iconnect> startPortsCommunication(String[] portName) throws OmException, OmConnectionException, OmDatastoreException;
	
    public Collection<Iconnect> stopPortsCommunication(String[] portName) throws OmException, OmConnectionException, OmDatastoreException;
   
	/**
	 * Use the QUERY IMSCON TYPE(CLIENT) command to display the status and
	 * activity of one or more clients that are active in IMS Connect.
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException
	 * @throws OmDatastoreException 
	 */
	public Collection<Iconnect> getClient() throws OmException, OmConnectionException, OmDatastoreException;
	
	/**
	 * Use the QUERY IMSCON TYPE(CLIENT) command to display the status and
     * activity of one or more clients that are active in IMS Connect.
	 * @param names
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException
	 * @throws OmDatastoreException 
	 */
	public Collection<Iconnect> getClient(String[] names) throws OmException, OmConnectionException, OmDatastoreException;
	
	/**
	 * Use the QUERY IMSCON TYPE(DATASTORE) command to display the status and 
	 * activity of one or more data stores defined to IMS Connect.
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException
	 * @throws OmDatastoreException 
	 */
	public Collection<Iconnect> getDatastore() throws OmException, OmConnectionException, OmDatastoreException;
	
	/**
	 * Use the QUERY IMSCON TYPE(DATASTORE) command to display the status and 
     * activity of one or more data stores defined to IMS Connect.
	 * @param datastoreName,show,route
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException
	 * @throws OmDatastoreException 
	 */
	 public Collection<Iconnect> getDatastoreByName(String[] datastoreName) throws OmException, OmConnectionException, OmDatastoreException;
	 
	 public Collection<Iconnect> getDatastore(String[] route) throws OmException, OmConnectionException, OmDatastoreException;
	 
	 public Collection<Iconnect> startDatastoresCommunication(String[] datastoreName) throws OmException, OmConnectionException, OmDatastoreException;
	 
	 public Collection<Iconnect> stopDatastoresCommunication(String[] datastoreName) throws OmException, OmConnectionException, OmDatastoreException;
	   
	
	/**
	 * Use the QUERY IMSCON TYPE(ODBM) command to display the status and 
     * activity of one or more data stores defined to IMS Connect.
	 * @param imsplex_name
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException
	 * @throws OmDatastoreException 
	 */
	public Collection<Iconnect> getOdbm() throws OmException, OmConnectionException, OmDatastoreException;

	/**
	 * Use the QUERY IMSCON TYPE(ODBM) command to display the status and 
     * activity of one or more data stores defined to IMS Connect.
	 * @param imsplex_name
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException
	 * @throws OmDatastoreException 
	 */
	 public Collection<Iconnect> getOdbm(String[] route) throws OmException, OmConnectionException, OmDatastoreException ;
	 
	 public Collection<Iconnect> startOdbmsCommunication(String[] OdbmName) throws OmException, OmConnectionException, OmDatastoreException;
	 
	 public Collection<Iconnect> stopOdbmsCommunication(String[] odbmName) throws OmException, OmConnectionException, OmDatastoreException;
	   
		   
	/**
	 * Use the QUERY IMSCON TYPE(RMTIMSCON) command to display the status and 
     * activity of one or more data stores defined to IMS Connect.
	 * @param imsplex_name
	 * @return
	 * @throws OmException
	 * @throws OmConnectionException
	 * @throws OmDatastoreException 
	 */
	public Collection<Iconnect> getRmtImsCon() throws OmException, OmConnectionException, OmDatastoreException;
	
	public Collection<Iconnect> getRmtImsCon(String[] route) throws OmException, OmConnectionException, OmDatastoreException;
	
	public Collection<Iconnect> getRmtImsConSummary(String[] route) throws OmException, OmConnectionException, OmDatastoreException;
	
	public Collection<Iconnect> startRmtImsConsCommunication(String[] imsConName) throws OmException, OmConnectionException, OmDatastoreException;
	
    public Collection<Iconnect> stopRmtImsConsCommunication(String[] imsConName) throws OmException, OmConnectionException, OmDatastoreException;

	public Collection<Iconnect> getConfig(String[] route) throws OmException, OmConnectionException, OmDatastoreException;
   	
}
