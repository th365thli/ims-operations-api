/*********************************************************************************
 * Licensed Materials - Property of IBM
 * 5655-TAC
 * (C) Copyright IBM Corp. 2013, 2015 All Rights Reserved. 
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with 
 * IBM Corp.               
 *********************************************************************************/
package com.ibm.ims.ea.om.common.services.enterprise;

import java.util.Collection;

import com.ibm.im.ac.datastore.DatastoreException;
import com.ibm.ims.ea.om.common.exception.OmDatastoreException;
import com.ibm.ims.ea.om.datastore.ImsOmDatastore;
import com.ibm.ims.ea.om.datastore.ImsTransactionTable;
import com.ibm.ims.ea.om.tran.Transaction;
import com.ibm.ims.ea.om.tran.Transaction.TransactionResponseAttribute;

public class TransactionServices {
    private ImsTransactionTable imsTransactionTable = null;
    
    protected TransactionServices() throws OmDatastoreException, DatastoreException{
        imsTransactionTable = ImsOmDatastore.getInstance().getImsTransactionStore();
    }
    
    /**
     * Returns all transactions for an environment (Sysplex). This service will query the transaction
     * services cache, you must have performed discovery before invoking any services in the enterprise.
     * See {@link TransactionServices} for more about discovery
     * @param environmentId
     * @return
     * @throws OmDatastoreException
     */
    public Collection<Transaction> getTransactions(int environmentId) throws OmDatastoreException{
        return imsTransactionTable.getTransactions(environmentId,new String[]{"*"});
    }
    
    /**
     * Returns all transactions for an environment (Sysplex) and IMSplex. This service will query the transaction
     * services cache, you must have performed discovery before invoking any services in the enterprise.
     * See {@link TransactionServices} for more about discovery
     * @param environmentId
     * @param imsplexName
     * @return
     * @throws OmDatastoreException
     */
    public Collection<Transaction> getTransactions(int environmentId, String imsplexName) throws OmDatastoreException{
        return imsTransactionTable.getTransactions(environmentId, imsplexName,new String[]{"*"});
    }
    
    /**
     * Returns all transactions for an environment (Sysplex), IMSplex and an IMS System. This service will query the transaction
     * services cache, you must have performed discovery before invoking any services in the enterprise.
     * See {@link TransactionServices} for more about discovery
     * @param imsName
     * @param environmentId
     * @param imsplexName
     * @return
     * @throws OmDatastoreException
     */
    public Collection<Transaction> getTransactions(String[] imsName, int environmentId, String imsplexName) throws OmDatastoreException{
        return imsTransactionTable.getTransactions(environmentId, imsplexName,imsName);
    }
    
    /**
     * Returns matching transactions for an environment (Sysplex). This service will query the transaction
     * services cache, you must have performed discovery before invoking any services in the enterprise.
     * See {@link TransactionServices} for more about discovery
     * @param environmentId
     * @param transactions
     * @return
     * @throws OmDatastoreException
     */
    public Collection<Transaction> getTransactionsByName(int environmentId,String[] transactions) throws OmDatastoreException{
        return imsTransactionTable.getTransactionsByName(environmentId,transactions);
    }
    
    /**
     * Returns matching transactions for an environment (Sysplex) and IMSplex. This service will query the transaction
     * services cache, you must have performed discovery before invoking any services in the enterprise.
     * 
     * See {@link TransactionServices} for more about discovery
     * @param environmentId
     * @param imsplexId
     * @param transactions
     * @return
     * @throws OmDatastoreException
     */
    public Collection<Transaction> getTransactionsByName(int environmentId, String imsplexName,String[] transactions) throws OmDatastoreException{
        return imsTransactionTable.getTransactionsByName(environmentId,imsplexName,transactions);
    }
    
    /**
     * Returns all member names (IMS Names, ie IMS1, IMS2...) for the entire enterprise (all sysplexes). This service will query the transaction
     * services cache, you must have performed discovery before invoking any services in the enterprise.
     * 
     * See {@link TransactionServices} for more about discovery
     * 
     * @return
     * @throws OmDatastoreException
     */
    public Collection<String> getTransactionMembers() throws OmDatastoreException {
        return imsTransactionTable.getDistinctColumn(-1, null, TransactionResponseAttribute.MBR);
    }
       
    /**
     * Returns all member names (IMS Names, ie IMS1, IMS2...) for an environment (Sysplex). This service will query the transaction
     * services cache, you must have performed discovery before invoking any services in the enterprise.
     * 
     * See {@link TransactionServices} for more about discovery
     * 
     * @param sysplexId
     * @return
     * @throws OmDatastoreException
     */
    public Collection<String> getTransactionMembers(int sysplexId) throws OmDatastoreException {
        return imsTransactionTable.getDistinctColumn(sysplexId, null, TransactionResponseAttribute.MBR);
    }
       
    /**
     * Returns all member names (IMS Names, ie IMS1, IMS2...) for an environment (Sysplex) and IMSplex. This service will query the transaction
     * services cache, you must have performed discovery before invoking any services in the enterprise.
     * 
     * See {@link TransactionServices} for more about discovery
     * 
     * @param sysplexId
     * @param imsplexId
     * @return
     * @throws OmDatastoreException
     */
    public Collection<String> getTransactionMembers(int sysplexId, String imsplexName) throws OmDatastoreException {
        return imsTransactionTable.getDistinctColumn(sysplexId, imsplexName, TransactionResponseAttribute.MBR);
    }
}
