/*********************************************************************************
 * Licensed Materials - Property of IBM
 * 5655-TAC
 * (C) Copyright IBM Corp. 2015 All Rights Reserved. 
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with 
 * IBM Corp.               
 *********************************************************************************/

package com.ibm.ims.ea.om.common;

import java.util.HashMap;
import java.util.Map;


/**
 * Abstract class used to communicate the result of an OM Interaction. This class represents the 
 * base class for all type2 beans used in a response.
 *
 */
public abstract class ImsResource{
	
	protected Map<String, String> properties = new HashMap<String, String>();
	
	//fine for now, but probably need to start thinking about extension points
	protected ResourceType resourceType = null;
	
	public ImsResource() {}
	
	/**
	 * Instantiates the bean used for the response from an OM Interaction. 
	 * @param omResourceResponse Map representation for IMS resource such as 
	 * a transaction or database query.
	 */
	public ImsResource(Map<String, String> omResourceResponse) {
		this.properties = omResourceResponse;
	}

	/**
	 * Returns a map representing the bean's contents after an interaction with OM. 
	 * @return
	 */
	public Map<String, String> toMap() {
		return this.properties;
	}
	
	/**
	 * Returns the type of {@link ResourceType} that is represented by this bean.
	 * @return
	 */
	public ResourceType getResourceType () {
		return resourceType;
	}
	
	/**
	 * Resource type is used to identify the type of resource the bean is representing.
	 * It is important beans are identified with a resource type in order to know how
	 * the bean's status should be determined. 
	 */
	public enum ResourceType {
		PGM, DB, RTC, TRAN, IMSPLX, STRUCT, ICONNECT, ICONNECT_IMSPLEX, RCN, OTMA, ODBM, ACTIVE, IMS, MEMBER;
	}
	
	/**
	 * Returns the response from the OM Interaction as a map. 
	 * @return
	 */
	public Map<String, String> getMap() {  //How about refactor this as getResponseProperties or getResourceMap
		return properties;
	}

	/**
	 * Set the response from the OM interaction into this instance
	 * @param resourceMap
	 */
	public abstract void setMap(Map<String, String> resourceMap);  //How about refactor this as setResponseProperties or setResourceMap
	
	public abstract void setAttribute(String key, String value);
	
	@Override
	public String toString(){
	    StringBuilder result = new StringBuilder();
	    String NEW_LINE = System.getProperty("line.separator");
	        
	    String format = "| %1$-25s| %2$-50s|" + NEW_LINE;
	    String line = "+------------------------------------------------------------------------------+" + NEW_LINE;
	        
	    result.append(line);
	    result.append(String.format(format, "Object", this.getClass().getSimpleName() ));  
	    result.append(line);
	    result.append(String.format(format, "Variable Description", "Value")); 
	    
	    for(Map.Entry<String, String> entry : properties.entrySet()){
         	result.append(String.format(format, entry.getKey(), entry.getValue()));  
         	
	    }
	       
	    return result.toString();
	}
}
