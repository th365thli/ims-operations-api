/*********************************************************************************
 * Licensed Materials - Property of IBM
 * 5655-TAC
 * (C) Copyright IBM Corp. 2013 All Rights Reserved. 
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with 
 * IBM Corp.               
 *********************************************************************************/

package com.ibm.ims.ea.om.icon.query.config;

import com.ibm.ims.ea.om.common.Type2CommandBuilder;
import com.ibm.ims.ea.om.icon.query.IconQueryCommandBuilder.ICON_COMMAND_SUBTYPE;

/**
 * <pre>
 * Type 2 Command Builder for CONFIG type IMSCON type 2 commands
 * 
 * Example usage:
 *  public static void main(String[] args) {
 		conConfigCommandBuilder iconConfigCommand = new IconConfigCommandBuilder();
 		iconConfigCommand.setShow(new SHOW[]{SHOW.ALL});
 		String cmd = iconConfigCommand.getCommand();
 		System.out.println(cmd);
 	}
    
 *</pre>
 */
public class IconConfigQueryCommandBuilder extends Type2CommandBuilder implements IconConfigQueryCommand{

	private static String commandPrefix = "QUERY IMSCON TYPE";
	private static String commandIdSubType = ICON_COMMAND_SUBTYPE.CONFIG.name();
    
	
	/**Specifies the optional output fields to be displayed. Output fields that are
	 * always displayed, regardless of whether SHOW is specified, include the name of 
	 * the IMS Connect that processes the command and the completion code.
	 * @param values
	 */
	@Override
	public void setShow(SHOW[] values) {
		 int length = values.length;
	        int count = 1;
	        StringBuffer temp = new StringBuffer("SHOW(");
	        
	        for (SHOW show: values) {
	            temp.append(show);
	            
	            if(count > 1 && count != length){
	                count++;
	                temp.append(COMMA);
	            }
	        }
	        temp.append(CLOSEPARANTH);
	        commandArgs.add(temp.toString());
	}

    /**
     * Method creates and returns Syntax for a command 
     * <code> "QUERY IMSCON TYPE(CONFIG) SHOW(ALL)" </code>
     * @return String representation for the QUERY IMSCON TYPE(CONFIG) SHOW(ALL)
     */
    public String commandShowAll() {
    	setShow(new SHOW[]{SHOW.ALL});
        return getCommand();
    }
    
    
    /**
     * Returns the command prefix for this command, which is:
     * "QUERY IMSCON TYPE"
     */
	@Override
	public String getCommandPrefix() {
		return commandPrefix;
	}

	/**
	 * Returns the command type for this command which is:
	 * "CONFIG"
	 */
	@Override
	public String getCommandSubType() {
		return commandIdSubType;
	}
	

	
}
