/*********************************************************************************
 * Licensed Materials - Property of IBM
 * 5655-TAC
 * (C) Copyright IBM Corp. 2013 All Rights Reserved. 
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with 
 * IBM Corp.               
 *********************************************************************************/


package com.ibm.ims.ea.om.icon.query.client;

import com.ibm.ims.ea.base.om.common.messages.IQEO;
import com.ibm.ims.ea.om.common.Type2CommandBuilder;
import com.ibm.ims.ea.om.icon.query.IconQueryCommandBuilder.ICON_COMMAND_SUBTYPE;

public class IconClientQueryCommandBuilder extends Type2CommandBuilder implements IconClientQueryCommand {

	private static String commandPrefix = "QUERY IMSCON TYPE";
	private static String commandIdSubType = ICON_COMMAND_SUBTYPE.CLIENT.name();

	private boolean isPortSet = false;

	@Override
	public void setName(String[] names) {
		int length = names.length;
		int count = 1;
		StringBuffer temp = new StringBuffer("NAME(");

		for (String name : names) {
			int name_length = name.trim().length();

			if (name_length == 0 || name_length > 8) {
				throw new IllegalArgumentException(IQEO.IQEO0009E.msg(new Object[] { "(Name = " + name + ", length = " + name_length }));
			}

			temp.append(name);

			if (length > 1 && count != length) {
				count++;
				temp.append(COMMA);
			}
		}
		temp.append(CLOSEPARANTH);
		commandArgs.add(temp.toString());


	}

	@Override
	public void setDatastore(String[] datastores) {
		int length = datastores.length;
		int count = 1;
		StringBuffer temp = new StringBuffer("DATASTORE(");

		for (String data: datastores) {
			temp.append(data);

			if(count > 1 && count != length){
				count++;
				temp.append(COMMA);
			}
		}
		temp.append(CLOSEPARANTH);
		commandArgs.add(temp.toString());

	}

	@Override
	public void setPort(PORT port, String[] ports) {
		if (!isPortSet) {
			int length = ports.length;
			int count = 1;
			StringBuffer temp = new StringBuffer("PORT(" + port.name() + ", ");
			for (String portName: ports) {
				temp.append(portName);

				if(count > 1 && count != length){
					count++;
					temp.append(COMMA);
				}
			}
			temp.append(CLOSEPARANTH);
			commandArgs.add(temp.toString());
		}
		isPortSet = true;
	}

	@Override
	public void setPort(PORT port) {
		if (!isPortSet) {
			StringBuffer temp = new StringBuffer("PORT(" + port.name() + ")");
			commandArgs.add(temp.toString());
		}
		isPortSet = true;

	}

	@Override
	public void setPort(String[] ports) {
		if (!isPortSet) {
			int length = ports.length;
			int count = 1;
			StringBuffer temp = new StringBuffer("PORT(");
			for (String portName: ports) {
				temp.append(portName);

				if(count > 1 && count != length){
					count++;
					temp.append(COMMA);
				}
			}
			temp.append(CLOSEPARANTH);
			commandArgs.add(temp.toString());
		}
		isPortSet = true;
	}


	@Override
	public void setShow(SHOW[] shows) {
		int length = shows.length;
		int count = 1;
		StringBuffer temp = new StringBuffer("SHOW(");

		for (SHOW show: shows) {
			temp.append(show);

			if(count > 1 && count != length){
				count++;
				temp.append(COMMA);
			}
		}
		temp.append(CLOSEPARANTH);
		commandArgs.add(temp.toString());

	}

	@Override
	public void setStatus(STATUS[] statuses) {
		int length = statuses.length;
		int count = 1;
		StringBuffer temp = new StringBuffer("STATUS(");

		for (STATUS show: statuses) {
			temp.append(show);

			if(count > 1 && count != length){
				count++;
				temp.append(COMMA);
			}
		}
		temp.append(CLOSEPARANTH);
		commandArgs.add(temp.toString());
	}

	@Override
	public void setTran(String[] trancodeNames) {
		int length = trancodeNames.length;
		int count = 1;
		StringBuffer temp = new StringBuffer("TRAN(");

		for (String data: trancodeNames) {
			temp.append(data);

			if(count > 1 && count != length){
				count++;
				temp.append(COMMA);
			}
		}
		temp.append(CLOSEPARANTH);
		commandArgs.add(temp.toString());

	}

	@Override
	public void setUserId(String[] userIds) {
		int length = userIds.length;
		int count = 1;
		StringBuffer temp = new StringBuffer("USERID(");

		for (String data: userIds) {
			temp.append(data);

			if(count > 1 && count != length){
				count++;
				temp.append(COMMA);
			}
		}
		temp.append(CLOSEPARANTH);
		commandArgs.add(temp.toString());

	}
	
	@Override
	public void setRoute(String[] imsName) {
		int length = imsName.length;
		int count = 1;
		StringBuffer temp = new StringBuffer(") ROUTE(");

		for (String name: imsName) {
			temp.append(name);

			if(length > 1 && count !=length ){           
				temp.append(COMMA);   
			}
			count++;
		}
        commandArgs.add(temp.toString());
	}
	
	@Override
	public String getCommandPrefix() {
		return commandPrefix;
	}

	@Override
	public String getCommandSubType() {
		return commandIdSubType;
	}


}
